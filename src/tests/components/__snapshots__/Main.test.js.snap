// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Main component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Main
    city={
      Object {
        "coord": Object {
          "lat": 0,
          "lon": 0,
        },
        "country": "",
        "name": "",
        "population": 0,
      }
    }
    error=""
    loadingWeather={false}
    weather={
      Array [
        Array [
          Object {
            "dt": 0,
            "dt_txt": "",
            "main": Object {
              "pressure": 0,
              "temp": 0,
            },
            "weather": Array [
              Object {
                "description": "",
                "icon": "",
              },
            ],
            "wind": Object {
              "deg": 0,
              "speed": 0,
            },
          },
        ],
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": Array [
        <div
          className="jumbotron jumbotron-fluid"
        >
          <div
            className="container"
          >
            <h1
              className="display-4"
            >
              Weather app
            </h1>
            <div
              className="lead"
            >
              Please enter a name of the city to get 5 day forecast:
              <Connect(CityForm) />
            </div>
            
          </div>
        </div>,
        <div
          className="d-flex flex-row bd-highlight mb-3 flex-wrap"
        />,
        null,
      ],
    },
    "ref": null,
    "rendered": Array [
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": <div
            className="container"
          >
            <h1
              className="display-4"
            >
              Weather app
            </h1>
            <div
              className="lead"
            >
              Please enter a name of the city to get 5 day forecast:
              <Connect(CityForm) />
            </div>
            
          </div>,
          "className": "jumbotron jumbotron-fluid",
        },
        "ref": null,
        "rendered": Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <h1
                className="display-4"
              >
                Weather app
              </h1>,
              <div
                className="lead"
              >
                Please enter a name of the city to get 5 day forecast:
                <Connect(CityForm) />
              </div>,
              "",
            ],
            "className": "container",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Weather app",
                "className": "display-4",
              },
              "ref": null,
              "rendered": "Weather app",
              "type": "h1",
            },
            Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  "Please enter a name of the city to get 5 day forecast:",
                  <Connect(CityForm) />,
                ],
                "className": "lead",
              },
              "ref": null,
              "rendered": Array [
                "Please enter a name of the city to get 5 day forecast:",
                Object {
                  "instance": null,
                  "key": undefined,
                  "nodeType": "class",
                  "props": Object {},
                  "ref": null,
                  "rendered": null,
                  "type": [Function],
                },
              ],
              "type": "div",
            },
            "",
          ],
          "type": "div",
        },
        "type": "div",
      },
      Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": null,
          "className": "d-flex flex-row bd-highlight mb-3 flex-wrap",
        },
        "ref": null,
        "rendered": null,
        "type": "div",
      },
      null,
    ],
    "type": "div",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <div
            className="jumbotron jumbotron-fluid"
          >
            <div
              className="container"
            >
              <h1
                className="display-4"
              >
                Weather app
              </h1>
              <div
                className="lead"
              >
                Please enter a name of the city to get 5 day forecast:
                <Connect(CityForm) />
              </div>
              
            </div>
          </div>,
          <div
            className="d-flex flex-row bd-highlight mb-3 flex-wrap"
          />,
          null,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <div
              className="container"
            >
              <h1
                className="display-4"
              >
                Weather app
              </h1>
              <div
                className="lead"
              >
                Please enter a name of the city to get 5 day forecast:
                <Connect(CityForm) />
              </div>
              
            </div>,
            "className": "jumbotron jumbotron-fluid",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <h1
                  className="display-4"
                >
                  Weather app
                </h1>,
                <div
                  className="lead"
                >
                  Please enter a name of the city to get 5 day forecast:
                  <Connect(CityForm) />
                </div>,
                "",
              ],
              "className": "container",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "Weather app",
                  "className": "display-4",
                },
                "ref": null,
                "rendered": "Weather app",
                "type": "h1",
              },
              Object {
                "instance": null,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    "Please enter a name of the city to get 5 day forecast:",
                    <Connect(CityForm) />,
                  ],
                  "className": "lead",
                },
                "ref": null,
                "rendered": Array [
                  "Please enter a name of the city to get 5 day forecast:",
                  Object {
                    "instance": null,
                    "key": undefined,
                    "nodeType": "class",
                    "props": Object {},
                    "ref": null,
                    "rendered": null,
                    "type": [Function],
                  },
                ],
                "type": "div",
              },
              "",
            ],
            "type": "div",
          },
          "type": "div",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": null,
            "className": "d-flex flex-row bd-highlight mb-3 flex-wrap",
          },
          "ref": null,
          "rendered": null,
          "type": "div",
        },
        null,
      ],
      "type": "div",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
