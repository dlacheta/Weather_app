// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CityForm component renders correctly 1`] = `
ShallowWrapper {
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <CityForm
    getWeatherDispatch={[MockFunction]}
    toogleLoadingDispatch={[MockFunction]}
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "host",
    "props": Object {
      "children": <div
        className="input-group mb-3"
      >
        <input
          className="form-control"
          name="city_name"
          placeholder="City"
          type="text"
        />
        <div
          className="input-group-append"
        >
          <button
            className="btn btn-outline-dark"
            id="button-addon2"
            type="submit"
          >
            Submit
          </button>
        </div>
      </div>,
      "onSubmit": [Function],
    },
    "ref": null,
    "rendered": Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <input
            className="form-control"
            name="city_name"
            placeholder="City"
            type="text"
          />,
          <div
            className="input-group-append"
          >
            <button
              className="btn btn-outline-dark"
              id="button-addon2"
              type="submit"
            >
              Submit
            </button>
          </div>,
        ],
        "className": "input-group mb-3",
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "className": "form-control",
            "name": "city_name",
            "placeholder": "City",
            "type": "text",
          },
          "ref": null,
          "rendered": null,
          "type": "input",
        },
        Object {
          "instance": null,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": <button
              className="btn btn-outline-dark"
              id="button-addon2"
              type="submit"
            >
              Submit
            </button>,
            "className": "input-group-append",
          },
          "ref": null,
          "rendered": Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": "Submit",
              "className": "btn btn-outline-dark",
              "id": "button-addon2",
              "type": "submit",
            },
            "ref": null,
            "rendered": "Submit",
            "type": "button",
          },
          "type": "div",
        },
      ],
      "type": "div",
    },
    "type": "form",
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": <div
          className="input-group mb-3"
        >
          <input
            className="form-control"
            name="city_name"
            placeholder="City"
            type="text"
          />
          <div
            className="input-group-append"
          >
            <button
              className="btn btn-outline-dark"
              id="button-addon2"
              type="submit"
            >
              Submit
            </button>
          </div>
        </div>,
        "onSubmit": [Function],
      },
      "ref": null,
      "rendered": Object {
        "instance": null,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <input
              className="form-control"
              name="city_name"
              placeholder="City"
              type="text"
            />,
            <div
              className="input-group-append"
            >
              <button
                className="btn btn-outline-dark"
                id="button-addon2"
                type="submit"
              >
                Submit
              </button>
            </div>,
          ],
          "className": "input-group mb-3",
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "className": "form-control",
              "name": "city_name",
              "placeholder": "City",
              "type": "text",
            },
            "ref": null,
            "rendered": null,
            "type": "input",
          },
          Object {
            "instance": null,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": <button
                className="btn btn-outline-dark"
                id="button-addon2"
                type="submit"
              >
                Submit
              </button>,
              "className": "input-group-append",
            },
            "ref": null,
            "rendered": Object {
              "instance": null,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "Submit",
                "className": "btn btn-outline-dark",
                "id": "button-addon2",
                "type": "submit",
              },
              "ref": null,
              "rendered": "Submit",
              "type": "button",
            },
            "type": "div",
          },
        ],
        "type": "div",
      },
      "type": "form",
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
